datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Restaurants {
  restaurant_id Int       @id @default(autoincrement())
  name          String    @db.VarChar(100)
  food_category String    @db.VarChar(100)
  contact_number String   @db.VarChar(100)
  address_si     String   @db.VarChar(50)
  address_gu     String   @db.VarChar(50)
  address_dong   String   @db.VarChar(50)
  address_detail String   @db.VarChar(50)
  time_open      String   @db.VarChar(50)
  time_close     String   @db.VarChar(50)
  is_res_halal       Boolean @default(false)
  is_res_vegan       Boolean @default(false)
  is_res_peanut      Boolean @default(false)
  photo_id      Int?

  photo         Photo?       @relation(fields: [photo_id], references: [photo_id])
  menus          Menu[]
}

model Menu {
  menu_id       Int    @id @default(autoincrement())
  restaurant_id Int
  name          String    @db.VarChar(150)
  photo_id      Int?
  price         Decimal    @db.Decimal(10, 2)
  is_menu_halal       Boolean @default(false)
  is_menu_vegan       Boolean @default(false)
  is_menu_peanut      Boolean @default(false)

  restaurant    Restaurants @relation(fields: [restaurant_id], references: [restaurant_id])
  photo         Photo?       @relation(fields: [photo_id], references: [photo_id])

  @@index([restaurant_id])
}

model Photo {
  photo_id Int    @id @default(autoincrement())
  file_path  String @db.VarChar(255)

  menus    Menu[]
  restaurants Restaurants[]
}

model User {
  user_id       Int      @id @default(autoincrement())
  username      String   @db.VarChar(50) @unique
  location_lat  Decimal? @db.Decimal(9, 6)
  location_long Decimal? @db.Decimal(9, 6)
  kakaoId       Int?     @unique

  userPreference UserPreference[]
}
model UserPreference {
  user_id       Int      @id
  is_user_halal Boolean  @default(false)
  is_user_vegan Boolean  @default(false)
  is_user_peanut Boolean @default(false)

  user User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@map("user_preferences")
}
